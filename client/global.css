@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    /* Portfolio Dark Theme - Default (Dark Mode) */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 5%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;

    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 70%;

    --accent: 0 0% 15%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 62.8% 50%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 20%;
    --input: 0 0% 15%;
    --ring: 0 0% 100%;

    --radius: 0.75rem;

    --sidebar-background: 0 0% 0%;
    --sidebar-foreground: 0 0% 100%;
    --sidebar-primary: 0 0% 100%;
    --sidebar-primary-foreground: 0 0% 0%;
    --sidebar-accent: 0 0% 10%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 0 0% 20%;
    --sidebar-ring: 0 0% 100%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .glow-effect {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .glow-effect:hover {
    box-shadow:
      0 0 30px rgba(255, 255, 255, 0.6),
      0 0 60px rgba(255, 255, 255, 0.4),
      inset 0 0 20px rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.9);
    transform: translateY(-2px) scale(1.02);
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow:
      0 8px 32px 0 rgba(0, 0, 0, 0.37),
      inset 0 0 20px rgba(255, 255, 255, 0.05);
  }

  .cyber-border {
    border: 2px solid transparent;
    background: linear-gradient(black, black) padding-box,
                linear-gradient(45deg, transparent, rgba(0, 255, 255, 0.5), transparent) border-box;
  }

  .clean-text {
    /* Removed glow effects - clean text styling */
  }

  .shimmer-text {
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.4) 0%,
      rgba(255, 255, 255, 1) 50%,
      rgba(255, 255, 255, 0.4) 100%
    );
    background-size: 200% auto;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: text-shimmer 3s linear infinite;
  }

  .grid-bg {
    background-image:
      linear-gradient(to right, rgba(255,255,255,0.08) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255,255,255,0.08) 1px, transparent 1px);
    background-size: 60px 60px;
    position: relative;
  }

  .grid-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 50% 50%, rgba(255,255,255,0.1) 0%, transparent 70%);
    pointer-events: none;
  }

  .cyber-grid {
    background-image:
      linear-gradient(to right, rgba(0, 255, 255, 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
  }

  .typing-cursor::after {
    content: '|';
    animation: blink 0.75s step-end infinite;
  }

  .progress-bar-animated {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
  }

  .progress-bar-animated::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    animation: shimmer 2.5s infinite;
  }

  .card-hover-effect {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .card-hover-effect::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(600px circle at var(--x, 50%) var(--y, 50%), rgba(255,255,255,0.1), transparent 40%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .card-hover-effect:hover::before {
    opacity: 1;
  }

  .card-hover-effect:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.3),
      0 0 40px rgba(255, 255, 255, 0.1),
      inset 0 0 30px rgba(255, 255, 255, 0.05);
  }

  .scan-line-effect {
    position: relative;
    overflow: hidden;
  }

  .scan-line-effect::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(0, 255, 255, 0.8), transparent);
    animation: scan-line 3s infinite;
  }

  .floating-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    animation: particle-float 8s infinite linear;
  }

  .mesh-gradient-bg {
    background:
      radial-gradient(at 40% 20%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 80% 0%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 0% 50%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 80% 50%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 0% 100%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 80% 100%, rgba(255,255,255,0.1) 0px, transparent 50%),
      radial-gradient(at 0% 0%, rgba(255,255,255,0.1) 0px, transparent 50%);
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  @keyframes pulse-border {
    0%, 100% { border-color: rgba(255, 255, 255, 0.3); }
    50% { border-color: rgba(255, 255, 255, 0.8); }
  }

  .stagger-animation > * {
    animation-delay: calc(var(--stagger) * 0.1s);
  }
}
